/*! normalize.css v3.0.2 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}mark{color:#000;background:#ff0}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{font:inherit;margin:0;color:inherit}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{cursor:pointer;-webkit-appearance:button}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{padding:0;border:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{box-sizing:content-box;-webkit-appearance:textfield}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{margin:0 2px;padding:.35em .625em .75em;border:1px solid silver}legend{padding:0;border:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-spacing:0;border-collapse:collapse}td,th{padding:0}@font-face{font-family:trade;src:url(../../fonts/TradeGothicLTStd.otf)}@font-face{font-family:tradeBold;src:url(../../fonts/TradeGothicLTStd-Bold.otf)}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}body,html{font-family:trade,sans-serif;height:100%;margin:0}body{font-size:100%;width:100%;margin:0 auto;padding:0;vertical-align:baseline;color:#31353d;border:0;outline:0;background-color:#f6f6f4;text-rendering:optimizeLegibility!important}h1{font-family:trade,sans-serif}a,h1,li{color:#31353d;text-shadow:rgba(0,0,0,.01) 0 0 1px;-webkit-font-smoothing:antialiased!important}h1,h2,p{margin:0}a{font-size:inherit;line-height:inherit;text-decoration:none;color:inherit}ul{margin:0;padding:0;list-style:none}img{width:100%;max-width:100%;margin:0 auto;vertical-align:text-bottom}@font-face{font-family:icomoon;font-weight:400;font-style:normal;src:url(../../fonts/icomoon.eot?afsz16);src:url(../../fonts/icomoon.eot?afsz16#iefix) format('embedded-opentype'),url(../../fonts/icomoon.ttf?afsz16) format('truetype'),url(../../fonts/icomoon.woff?afsz16) format('woff'),url(../../fonts/icomoon.svg?afsz16#icomoon) format('svg')}[class*=' icon-'],[class^=icon-]{font-family:icomoon!important;font-weight:400;font-style:normal;font-variant:normal;line-height:1;text-transform:none;speak:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-up:before{content:'\e903'}.icon-instagram:before{content:'\e900'}.icon-close{position:relative;display:inline-block;overflow:hidden;width:50px;height:50px}.icon-close::after,.icon-close::before{position:absolute;top:50%;left:0;width:100%;height:1px;margin-top:-1px;content:'';background:#666}.icon-close::before{transform:rotate(45deg)}.icon-close::after{transform:rotate(-45deg)}.icon-bulb:before{content:'\e902'}.icon-phone:before{content:'\e942'}.icon-email:before{content:'\e945'}.icon-twitter:before{content:'\ea96'}.icon-linkedin:before{content:'\eac9'}.home{padding:0 10% 40px}.home a{display:block}.home video{display:block;width:100%;height:auto}#about .wrapper{width:60%;margin:0 auto}#about .wrapper header{width:90%;margin:0 auto 40px}#about .wrapper header div{width:80px;margin-top:10px;border-top:1px solid #31353d}#about .about-hero{margin-bottom:40px}#about .about-hero img{transition:-webkit-filter .8s ease;transition:filter .8s ease;transition:filter .8s ease,-webkit-filter .8s ease;-webkit-filter:grayscale(1);filter:grayscale(1)}#about .about-hero img:hover{-webkit-filter:grayscale(0);filter:grayscale(0)}#about .about-copy{display:flex;width:100%;margin:0 auto 40px;flex-wrap:wrap}#about .about-copy p{line-height:21px;line-height:1.3125rem;width:50%;margin-bottom:20px;padding-right:30px}#about .about-copy p:nth-child(even){padding-right:0}.header{background-color:#fff}.header .header-wrapper{display:flex;padding:90px 10% 40px;align-items:center;justify-content:space-between}.header .logo{font-family:tradeBold,sans-serif;font-size:16px;font-size:1rem;display:inline-block;white-space:nowrap;text-transform:uppercase;color:#31353d}.header .logo-container{width:20%}.header .navigation{width:60%;justify-content:center}.header .social{width:20%;justify-content:flex-end}.header ul{display:flex}.header .navigation li:not(:last-child){margin-right:20px}.header .navigation a,.header .navigation li{transition:opacity .3s ease;opacity:.7}.header .navigation li{font-size:14px;font-size:.875rem;font-weight:100;cursor:pointer}.header .navigation li.active{font-weight:700}.header .navigation li.active a{font-weight:inherit;opacity:1}.header .navigation li:hover{opacity:1}.header .navigation li:hover a{opacity:1}.header .social li{margin-right:10px}.header .social li:last-child{margin-right:0}.header .social li a{color:#31353d}.header .social li a span{font-size:18px;transition:opacity .3s ease;opacity:.4;color:inherit}.header .social li a:hover span{opacity:1}.header-mobile{position:fixed;z-index:1000;top:0;right:0;left:0;display:none;width:100%;height:60px;background-color:#fff;justify-content:center;align-items:center}.header-mobile .hamburger{position:absolute;left:0}.header-mobile a{font-family:tradeBold,sans-serif;text-transform:uppercase}#films{padding-top:40px}#films header{text-align:center}#films header h1{font-size:16px;font-size:1rem;font-weight:100;margin:0}#films header span{display:block;width:0;margin:10px auto 25px;transition:width 1s ease;border-top:1px solid #31353d}#films header span.grow{width:100px}.films-row{display:flex;margin:0 -8px;padding:0 10%;-webkit-animation:fadeInFromNone 2.5s ease;animation:fadeInFromNone 2.5s ease;flex-wrap:wrap}.films-row .film{position:relative;overflow:hidden;width:calc(33.33% - 8px);margin:0 4px 8px;cursor:pointer}.films-row .film img{height:100%}.films-row .film:hover .overlay{opacity:1}.films-row .film .overlay{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;height:100%;transition:opacity .2s ease;opacity:0;background-color:rgba(0,0,0,.5)}.top{display:flex;width:calc(90% + 4px);height:90px;margin:-4px auto 0;cursor:pointer;text-align:center;color:#31353d;justify-content:center;align-items:center}.top span{transition:transform 1s ease}.top:hover span{transform:translateY(-10px)}.video-wrapper{position:fixed;top:0;right:0;bottom:0;left:0;display:none;width:100%;height:100%;transition:background-color .5s ease;background-color:#fff}.video-wrapper.show{display:block;-webkit-animation:fadeInFromNone 1s ease;animation:fadeInFromNone 1s ease}.video-wrapper.lights-off{background-color:#000}.video-wrapper .video-container{position:relative;display:flex;width:100%;max-width:1800px;height:100%;margin:0 auto;transition:opacity 1s ease;opacity:0;align-items:center;justify-content:center}.video-wrapper .video-container.show{opacity:1}.video-wrapper .video-container .bulb{font-size:26px;position:absolute;z-index:20;top:20px;right:40px;cursor:pointer;transition:color .5s ease;color:#31353d}.video-wrapper .video-container .bulb .lights-off{color:#5e6777}.video-wrapper .video-container .bulb:hover{color:#5e6777}.video-wrapper .video-player{position:relative;width:65%}.video-wrapper .video-player .close{font-size:22px;position:fixed;top:20px;left:20px;cursor:pointer;transition:color .5s ease,transform .4s ease;color:#31353d}.video-wrapper .video-player .close.lights-off{color:#fff}.video-wrapper .video-player .close:hover{transform:rotate(90deg)}#work{padding-top:40px}.work-header{width:100%;margin-bottom:50px;padding:0 10%}.work-header ul{display:flex;align-items:center;justify-content:center}.work-header ul li{cursor:pointer}.work-header ul li.active{font-weight:700}.work-header ul li:first-child{margin-right:10px}.work-header ul li:last-child{margin-left:10px}.works-grid{display:flex;margin:0 -4px;padding:0;-webkit-animation:fadeInFromNone 2.5s ease;animation:fadeInFromNone 2.5s ease;flex-wrap:wrap}.works-grid .thumbnail{position:relative;overflow:hidden;width:calc(33.33% - 4px);margin:0 2px 4px;cursor:pointer;transition:all 1s ease}.works-grid .thumbnail:hover .title{opacity:1}.works-grid .thumbnail.featured{width:calc(66.66% - 4px)}.works-grid .thumbnail.featured img{height:100%}.works-grid .thumbnail.featured .title h4{font-size:6vw;line-height:1;margin-bottom:-4px}.works-grid .thumbnail.featured .title h6{font-size:1.5vw}.works-grid .thumbnail.hide{display:none;transform:translateY(5%);opacity:0}.works-grid .thumbnail.show-up{-webkit-animation:fadeInFromNoneUp .5s ease;animation:fadeInFromNoneUp .5s ease}.works-grid .thumbnail img{height:100%}.works-grid .thumbnail .title{position:absolute;top:0;right:0;bottom:0;left:0;display:flex;flex-direction:column;width:100%;height:100%;padding:0 20px 0 60px;transition:opacity .4s ease;opacity:0;color:#fff;background-color:rgba(0,0,0,.7);align-items:flex-start;justify-content:center}.works-grid .thumbnail .title h4,.works-grid .thumbnail .title h6{margin:0;text-align:left;text-transform:uppercase;color:inherit}.works-grid .thumbnail .title h4{font-size:3vw;margin-left:-4px}.works-grid .thumbnail .title h6{font-size:.75vw}.works-grid .stacked-work{display:flex;flex-direction:column;width:calc(33.33% - 4px);margin:0 2px 4px}.works-grid .stacked-work.sorted .thumbnail{margin:0!important}.works-grid .stacked-work .thumbnail{width:100%;height:calc(50% - 3px);flex-grow:1}.works-grid .stacked-work .thumbnail:first-child{margin:0 0 2px}.works-grid .stacked-work .thumbnail:last-child{margin:2px 0 0}.contact{position:fixed;z-index:100;top:0;right:0;bottom:0;left:0;display:none;width:100%;height:100%;transition:background-color .5s ease;background-color:rgba(255,255,255,.9);align-items:center;justify-content:center}.contact.show{display:flex;-webkit-animation:fadeInFromNone 1s ease;animation:fadeInFromNone 1s ease}.contact .icon-close{font-size:40px;position:absolute;top:40px;right:40px;cursor:pointer;transition:transform .4s ease;color:#31353d}.contact .icon-close:hover{transform:rotate(90deg)}.contact .contact-info a:not(:last-child){margin-right:20px}.contact .contact-info a{transition:all 1.5s ease;opacity:0}.contact .contact-info a span{margin-right:10px}.contact.show .contact-info a{transform:translateY(0);opacity:1}/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */.hamburger{font:inherit;display:inline-block;overflow:visible;margin:0;padding:20px;cursor:pointer;transition-timing-function:linear;transition-duration:.15s;transition-property:opacity,-webkit-filter;transition-property:opacity,filter;transition-property:opacity,filter,-webkit-filter;text-transform:none;color:inherit;border:0;background-color:transparent}.hamburger:hover{opacity:.7}.hamburger-box{position:relative;display:inline-block;width:26px;height:24px}.hamburger-inner{top:50%;display:block;margin-top:-2px}.hamburger-inner,.hamburger-inner::after,.hamburger-inner::before{position:absolute;width:26px;height:2px;transition-timing-function:ease;transition-duration:.15s;transition-property:transform;border-radius:4px;background-color:#000}.hamburger-inner::after,.hamburger-inner::before{display:block;content:''}.hamburger-inner::before{top:-6px}.hamburger-inner::after{bottom:-6px}.hamburger--spin .hamburger-inner{transition-timing-function:cubic-bezier(.55,.055,.675,.19);transition-duration:.3s}.hamburger--spin .hamburger-inner::before{transition:top .1s .34s ease-in,opacity .1s ease-in}.hamburger--spin .hamburger-inner::after{transition:bottom .1s .34s ease-in,transform .3s cubic-bezier(.55,.055,.675,.19)}.hamburger--spin.is-active .hamburger-inner{transition-delay:.14s;transition-timing-function:cubic-bezier(.215,.61,.355,1);transform:rotate(225deg)}.hamburger--spin.is-active .hamburger-inner::before{top:0;transition:top .1s ease-out,opacity .1s .14s ease-out;opacity:0}.hamburger--spin.is-active .hamburger-inner::after{bottom:0;transition:bottom .1s ease-out,transform .3s .14s cubic-bezier(.215,.61,.355,1);transform:rotate(-90deg)}@media (min-width:600px){.home{background-image:none!important}}@media only screen and (max-width:1024px){.video-wrapper .video-container{padding:100px 90px 0}}@media (max-width:600px){body{padding-top:60px}.home{display:flex;height:calc(100vh - 60px);padding:0;align-items:center}.home a{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;height:100%;opacity:0}#about .wrapper{width:90%}#about .wrapper header{width:100%;padding:0 20px}#about .about-copy{display:block;width:100%;margin:0;padding:0}#about .about-copy p{width:100%;padding:0}.header .header-wrapper{flex-direction:column}.header{position:fixed;z-index:10;top:60px;right:0;bottom:0;left:0;overflow:hidden;flex-direction:column;width:100%;height:100%;max-height:0;padding:0 0 0 20px;transition:max-height .3s ease;background-color:#fff;align-items:flex-start;justify-content:initial}.header.show{max-height:100vh}.header .logo-container{display:none}.header .navigation{width:100%;padding-top:50px}.header .social{display:flex;margin-top:18px;justify-content:flex-start;align-self:flex-start}.header ul{display:block}.header .navigation li{font-size:25px;font-size:1.5625rem;display:table;margin-bottom:18px}.header-mobile{display:flex}.films-row{display:block}.films-row .film{width:100%;margin:0 0 6px}.top{width:100%;height:50px;margin:-1px 0 0}.video-wrapper .video-container{padding:80px 20px 0}.video-wrapper .video-container .bulb{display:none}.video-wrapper .video-player{width:95%}.video-wrapper .video-player .close{top:80px}.video-wrapper .video-player .close{font-size:22px;right:0}#work{padding-top:50px}.works-grid .thumbnail{width:100%;margin:0 0 6px}.works-grid .thumbnail:last-child{margin:0}.works-grid .thumbnail.featured{width:100%!important}.works-grid .stacked-work{display:block;width:100%;margin:0}.works-grid .stacked-work .thumbnail{height:100%}.works-grid .stacked-work .thumbnail:first-child{margin:0 0 6px}.works-grid .stacked-work .thumbnail:last-child{margin:0 0 6px}.contact{padding-left:20px;justify-content:flex-start}.contact .contact-info a:not(:last-child){margin-right:0}.contact .contact-info a{display:block;margin-bottom:20px}}@-webkit-keyframes fadeInUp{0%{display:none;transform:translateY(5%);opacity:0}1%{display:block;opacity:0}100%{display:block;transform:translateY(0);opacity:1}}@keyframes fadeInUp{0%{display:none;transform:translateY(5%);opacity:0}1%{display:block;opacity:0}100%{display:block;transform:translateY(0);opacity:1}}@-webkit-keyframes fadeOutUp{0%{display:block;transform:translateY(0);opacity:1}100%{display:none;transform:translateY(-5%);opacity:0}}@keyframes fadeOutUp{0%{display:block;transform:translateY(0);opacity:1}100%{display:none;transform:translateY(-5%);opacity:0}}@-webkit-keyframes fadeInFromNone{0%{display:none;opacity:0}1%{display:block;opacity:0}100%{display:block;opacity:1}}@keyframes fadeInFromNone{0%{display:none;opacity:0}1%{display:block;opacity:0}100%{display:block;opacity:1}}@-webkit-keyframes fadeInFromNoneUp{0%{display:none;opacity:0}1%{display:block;opacity:0}100%{display:block;transform:translateY(0);opacity:1}}@keyframes fadeInFromNoneUp{0%{display:none;opacity:0}1%{display:block;opacity:0}100%{display:block;transform:translateY(0);opacity:1}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
